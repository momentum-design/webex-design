@use 'sass:math';
$base-size: 16;
/// Converts unitless pixel value to rem size.
///
/// @access public
/// @example
///   for $base-size: 16, rem-calc(16) will return 1rem, which is the equivalent of 16px
///   for $base-size: 16, rem-calc(14) will return 0.875rem, which is the equivalent of 14px
///   for rem-calc(0) will throw an error since 0 doesn't need to be computed
///   for rem-calc(32px) will throw an error since we need to pass unitless values,
///     in order to avoid extra computation for getting rid of the unit
///
/// @param {Number} $size - The needed unitless pixel value to be converted.
///
/// @require {Variable} $base-size - The base size of the app. Represents unitless pixel value equivalent of `1rem`.
///
/// @return {Number} size in rem.
@function rem-calc($size) {
  @if not unitless($size) {
    @error 'Function argument must be expressed without units.';
  }

  @if $size == 0 {
    @error 'No need to compute 0 value. Use it directly instead.';
  }

  @return math.div($size, $base-size) * 1rem;
}
